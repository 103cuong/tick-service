enum Role {
  Free
  Premium
}

enum AccountStatus {
  Active
  Deactive
}

type Account {
  id: UUID! @id
  username: String! @unique
  password: String!
  email: String! @unique
  role: Role! @default(value: Free)
  status: AccountStatus @default(value: Active)
  users: [User!] @relation(name: "Account_User", onDelete: CASCADE)
  categories: [Category!] @relation(name: "Account_Category", onDelete: CASCADE)
  tasks: [Task!] @relation(name: "Account_Task", onDelete: CASCADE)
  steps: [Step!] @relation(name: "Account_Step", onDelete: CASCADE)
  images: [Image!] @relation(name: "Account_Image", onDelete: CASCADE)
  taskImages: [TaskImage] @relation(name: "Account_TaskImage", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type User {
  id: UUID! @id
  name: String!
  bio: String
  dob: DateTime
  account: Account! @relation(name: "Account_User")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Category {
  id: UUID! @id
  index: Int
  name: String!
  account: Account! @relation(name: "Account_Category")
  tasks: [Task!]! @relation(name: "Category_Task", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum TaskStatus {
  Todo
  InProcess
  Expired
  Done
}

enum TaskPriority {
  Highest
  High
  Medium
  Low
  Lowest
}

type Task {
  id: UUID! @id
  index: Int
  title: String!
  content: String
  status: TaskStatus! @default(value: Todo)
  priority: TaskPriority! @default(value: Medium)
  isImportant: Boolean! @default(value: false)
  dueDate: DateTime!
  reminderDate: DateTime
  doSendMail: Boolean! @default(value: false)
  category: Category! @relation(name: "Category_Task")
  account: Account! @relation(name: "Account_Task")
  steps: [Step!]! @relation(name: "Task_Step", onDelete: CASCADE)
  images: [TaskImage!]! @relation(name: "Task_TaskImage", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum StepStatus {
  Todo
  Done
}

type Step {
  id: UUID! @id
  index: Int
  title: String!
  status: StepStatus @default(value: Todo)
  task: Task! @relation(name: "Task_Step")
  account: Account! @relation(name: "Account_Step")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TaskImage {
  id: UUID! @id
  task: Task! @relation(name: "Task_TaskImage")
  image: Image!
  account: Account! @relation(name: "Account_TaskImage")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Image {
  id: UUID! @id
  publicId: String
  url: String!
  account: Account! @relation(name: "Account_Image")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
